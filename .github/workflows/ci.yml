name: CI for Docker Image

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    versioning:
      runs-on: ubuntu-latest
      name: Versioning
      outputs:
        package_version: ${{ steps.version.outputs.semVer }}

      steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.0
        with:
          versionSpec: '6.x'

      - name: Determine Version
        id: version
        uses: gittools/actions/gitversion/execute@v3.0.0

    build:
        needs: [versioning]
        name: Build
        runs-on: windows-latest
        env:
            DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
            SEMVER: ${{ needs.versioning.outputs.package_version }}
            DOCKER_IMAGE_VERSION: ${{ vars.DOCKER_USERNAME }}/win-dev-env:${{ needs.versioning.outputs.package_version }}
            DOCKER_IMAGE_LATEST: ${{ vars.DOCKER_USERNAME }}/win-dev-env:latest

        steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ env.DOCKER_USERNAME }}
            password: ${{ env.DOCKER_PASSWORD }}

        - name: Create Image
          run: >
            docker build 
            -t ${{ env.DOCKER_IMAGE_LATEST }} 
            -t ${{ env.DOCKER_IMAGE_VERSION }} 
            -m 2GB .

        - name: Verify Image
          run: |
            docker run --rm -v "$(pwd):C:\dev" -w C:\dev ${{ env.DOCKER_IMAGE_VERSION }} cmake -S . -B build
            docker run --rm -v "$(pwd):C:\dev" -w C:\dev ${{ env.DOCKER_IMAGE_VERSION }} cmake --build build
            docker run --rm -v "$(pwd):C:\dev" -w C:\dev ${{ env.DOCKER_IMAGE_VERSION }} ctest --test-dir build -C Debug

        - name: Run Docker container
          run: >
            docker run --rm 
            -v "$(pwd):C:\dev" 
            -w C:\dev 
            ${{ env.DOCKER_IMAGE_VERSION }} ./scripts/create-manifest.ps1 -OutputPath ./build/manifests.md

        - name: Push Image
          if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          run: |
            docker push ${{ env.DOCKER_IMAGE_VERSION }} -a

        - name: Create Release
          if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: >
            gh release create v${{ needs.versioning.outputs.package_version }}
            --repo ${{ github.repository }}
            --title v${{ needs.versioning.outputs.package_version }} 
            --notes-file ./build/manifests.md